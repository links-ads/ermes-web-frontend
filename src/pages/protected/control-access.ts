import {ROLE_ADMIN,ROLE_DECISION_MAKER,ROLE_FIRST_RESPONDER,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER} from '../../App.const';

//map each page to the list of account categories can access to
const accessPolicy = {
    //decision making routes
    '/dashboard': [ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/map': [ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/details': [ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/social':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    //Org manager non accede ai social
    // '/social':[ROLE_ADMIN,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/events':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/device-auth':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER,ROLE_FIRST_RESPONDER],
    //admin routes
    '/administration':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/organizations':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    '/users':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER],
    //organization routes
    '/organizations/':[ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER,ROLE_TEAM_LEADER,ROLE_DECISION_MAKER]
    
}

export const controlAccess = (page,role) => {
    if (accessPolicy[page] === undefined) return false
    return accessPolicy[page].includes(role)
}
